---
import loading from "../../assets/img/loading.gif";
---

<div class="chart">
  <canvas id="forecastChart" class="forecastChart global-hidden"></canvas>
  <div class="loading" id="loading"><img src={loading} width="60" alt="" /></div>
  <div class="margin">
    <table>
      <tr>
        <th>Your IP is:</th>
        <td id="yourIP"><img src={loading} width="20" alt="" /></td>
      </tr>
      <tr>
        <th>Your aproximate location:</th>
        <td id="yourLocation"><img src={loading} width="20" alt="" /></td>
      </tr>
      <tr>
        <th>Current temperature</th>
        <td id="temp"><img src={loading} width="20" alt="" /></td>
      </tr>
      <tr>
        <th>Rain chance:</th>
        <td id="rain"><img src={loading} width="20" alt="" /></td>
      </tr>
    </table>

    <div class="infobox">
      <h2 class="global-hidden">Full URL:</h2>
      <h3 class="global-hidden" id="URL"></h3>
    </div>
  </div>
</div>

<script>
  const getIP = () => {
    const url = "https://ipapi.co/json/";
    fetch(url)
      .then((response) => {
        return response.json();
      })
      .then((data) => {
        // document.getElementById('data').innerHTML = data.image;
        document.getElementById("yourIP").innerHTML = data.ip;
        document.getElementById("yourLocation").innerHTML =
          data.city + ", " + data.country_name;
        getForecast(data.latitude, data.longitude);
        return data;
      });
  };

  const getForecast = (lat, lon) => {
    const url = `https://api.open-meteo.com/v1/forecast?current_weather=true&latitude=${lat}&longitude=${lon}&hourly=precipitation_probability&hourly=temperature_2m`;
    fetch(url)
      .then((response) => {
        return response.json();
      })
      .then((data) => {
        // document.getElementById('data').innerHTML = data.image;
        document.getElementById("URL").innerHTML = url;
        document.getElementById("temp").innerHTML =
          data.current_weather.temperature + " Â°C";
        document.getElementById("rain").innerHTML =
          data.hourly.precipitation_probability[1] + " %";
        getForecastDataChart(data, 24);
        return data;
      });
  };

  const getForecastDataChart = (data, numberOfDataPoints) => {
    // Initialize myData here
    const myData = {
      dataTempValues:"",
      dataTimeLabels:"",
      dataRainValues: ""
    };
    myData.dataTempValues = data.hourly.temperature_2m.slice(0, numberOfDataPoints);
    myData.dataTimeLabels = data.hourly.time.slice(0, numberOfDataPoints);
    myData.dataRainValues = data.hourly.precipitation_probability.slice(0, numberOfDataPoints);

        const ctx = document.getElementById("forecastChart");
        new Chart(ctx, {
          type: "line",
          data: {
            labels: myData.dataTimeLabels,
            datasets: [
              {
                label: "Temperature",
                data: myData.dataTempValues,
                borderWidth: 3,
                borderColor: '#ff9f40',
                backgroundColor: '#cc7d20'
              },
              {
                label: "Rain chance %",
                data: myData.dataRainValues,
                borderWidth: 3,
                borderColor: '#36a2eb',
                backgroundColor: '#9BD0F5'
              }
            ],
          },
          options: {
            scales: {
              y: {
                beginAtZero: true,
              },
            },
          },
        });
        document.getElementById('loading').className = 'global-hidden';
  };

  getIP();
</script>

<style>
  .forecastChart {
    max-width: 800px;
    max-height: 400px;
  }
  .margin {
    margin: 20px;
  }

  td {
    margin: 0;
    padding: 0 20px;
  }

  th {
    text-align: start;
  }

  .loading {
    text-align: center;
    margin: 40px;
  }
</style>
